"use strict";(self.webpackChunkclassmoji_website=self.webpackChunkclassmoji_website||[]).push([[1900],{3266:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"instructor-guide/auto-grading","title":"Auto-grading","description":"Classmoji supports automated grading by running tests inside each student\'s repository using GitHub Actions.","source":"@site/docs/02-instructor-guide/auto-grading.mdx","sourceDirName":"02-instructor-guide","slug":"/instructor-guide/auto-grading","permalink":"/docs/instructor-guide/auto-grading","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-instructor-guide/auto-grading.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Auto-grading","sidebar_label":"\ud83e\udd16 Auto-grading","sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"\ud83e\uddf1 Modules & Assignments","permalink":"/docs/instructor-guide/modules-assignments"},"next":{"title":"\ud83e\udd7d Viewing Grades","permalink":"/docs/instructor-guide/viewing-grades"}}');var r=s(4848),o=s(8453);const i={title:"Auto-grading",sidebar_label:"\ud83e\udd16 Auto-grading",sidebar_position:3},a="\ud83e\udd16 Auto-Grading with GitHub Actions",l={},d=[{value:"\ud83d\udee0\ufe0f How It Works",id:"\ufe0f-how-it-works",level:2},{value:"\ud83e\uddfe Example: Node.js + Jest Auto-Grading Workflow",id:"-example-nodejs--jest-auto-grading-workflow",level:2},{value:"\ud83d\udcd5 Key Concepts",id:"-key-concepts",level:2},{value:"\ud83e\udde9 Report Format: CTRF",id:"-report-format-ctrf",level:2},{value:"What is CTRF?",id:"what-is-ctrf",level:3},{value:"\ud83d\udd27 How to Generate a CTRF Report",id:"-how-to-generate-a-ctrf-report",level:2},{value:"\ud83d\udd27 Supported Languages",id:"-supported-languages",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-auto-grading-with-github-actions",children:"\ud83e\udd16 Auto-Grading with GitHub Actions"})}),"\n",(0,r.jsxs)(n.p,{children:["Classmoji supports automated grading by running tests inside each student's repository using ",(0,r.jsx)(n.strong,{children:"GitHub Actions"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"When students push their code to the assigned branch, a GitHub workflow is triggered. This workflow runs your tests and generates a score based on the results."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-how-it-works",children:"\ud83d\udee0\ufe0f How It Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["You include a test suite and a workflow file in your ",(0,r.jsx)(n.strong,{children:"template repository"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Classmoji copies this repo to create each student's assignment repository."}),"\n",(0,r.jsx)(n.li,{children:"On each push to the specified branch, the GitHub Action runs and computes a grade."}),"\n",(0,r.jsx)(n.li,{children:"The grade is recorded and shown in the Classmoji instructor dashboard."}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"You are responsible for writing your own tests and workflows. We provide examples in our template repo to help you get started."})}),"\n",(0,r.jsx)(n.h2,{id:"-example-nodejs--jest-auto-grading-workflow",children:"\ud83e\uddfe Example: Node.js + Jest Auto-Grading Workflow"}),"\n",(0,r.jsxs)(n.p,{children:["Here's an example GitHub Actions workflow (",(0,r.jsx)(n.code,{children:".github/workflows/grade.yml"}),") for a Node.js assignment that uses ",(0,r.jsx)(n.strong,{children:"Jest"})," to run tests:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"name: Run Tests\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n\njobs:\n  run-test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run Jest tests\n        run: npx jest sum.test.js\n        continue-on-error: true\n\n      - name: Read CTRF report\n        id: read_report\n        uses: brunchlabs/read-test-report-action@main\n\n      - name: Run autograder\n        uses: brunchlabs/run-autograder-action@main\n        with:\n          report: ${{ steps.read_report.outputs.content }}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-key-concepts",children:"\ud83d\udcd5 Key Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Workflow File Name"}),": When you create an assignment in Classmoji, you specify the name of the workflow file (e.g., ",(0,r.jsx)(n.code,{children:"grade.yml"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Branch Trigger"}),": The workflow will only run on the branch specified in the assignment."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-report-format-ctrf",children:"\ud83e\udde9 Report Format: CTRF"}),"\n",(0,r.jsxs)(n.p,{children:["Classmoji uses a unified test report format called ",(0,r.jsx)(n.strong,{children:"CTRF"})," (Common Test Result Format) to interpret student test results, regardless of what language or framework you're using."]}),"\n",(0,r.jsx)(n.h3,{id:"what-is-ctrf",children:"What is CTRF?"}),"\n",(0,r.jsx)(n.p,{children:"CTRF is a JSON-based test report format created to unify the structure of test result reports across various tools and frameworks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures consistent report format across different testing tools"}),"\n",(0,r.jsx)(n.li,{children:"Compatible with any programming language and testing framework"}),"\n",(0,r.jsx)(n.li,{children:"Facilitates easy integration and analysis through a standardized structure"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-how-to-generate-a-ctrf-report",children:"\ud83d\udd27 How to Generate a CTRF Report"}),"\n",(0,r.jsx)(n.p,{children:"The CTRF format is an open-source initiative that provides reporters for a variety of widely used testing frameworks. These include popular tools such as Jest, Cypress, Mocha, Selenium, JUnit, and many others. This open-source approach ensures that you can generate CTRF reports across different languages and frameworks, facilitating seamless integration with GitHub Actions for automated grading."}),"\n",(0,r.jsx)(n.p,{children:"The report will look like this regardless of the testing framework or programming language you use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "results": {\n    "tool": {\n      "name": "AnyTool"\n    },\n    "summary": {\n      "tests": 1,\n      "passed": 1,\n      "failed": 0,\n      "pending": 0,\n      "skipped": 0,\n      "other": 0,\n      "start": 1706828654274,\n      "stop": 1706828655782\n    },\n    "tests": [\n      {\n        "name": "should be able to login",\n        "status": "passed",\n        "duration": 801\n      }\n    ],\n    "environment": {\n      "appName": "MyApp",\n      "buildName": "MyApp",\n      "buildNumber": "100"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-supported-languages",children:"\ud83d\udd27 Supported Languages"}),"\n",(0,r.jsx)(n.p,{children:"You can use any language that works with GitHub Actions. We provide example workflows for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node.js (Jest, Mocha)"}),"\n",(0,r.jsx)(n.li,{children:"Python (pytest)"}),"\n",(0,r.jsx)(n.li,{children:"Java (JUnit)"}),"\n",(0,r.jsx)(n.li,{children:"C++ (Google Test)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep tests scoped and fast"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"continue-on-error: true"})," to ensure all steps complete"]}),"\n",(0,r.jsx)(n.li,{children:"Always commit your workflow and test files to the template repo before publishing a module"}),"\n",(0,r.jsxs)(n.li,{children:["Use unique branch names per assignment (e.g., ",(0,r.jsx)(n.code,{children:"part1"}),", ",(0,r.jsx)(n.code,{children:"lab2"}),") to isolate auto-grading logic"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);